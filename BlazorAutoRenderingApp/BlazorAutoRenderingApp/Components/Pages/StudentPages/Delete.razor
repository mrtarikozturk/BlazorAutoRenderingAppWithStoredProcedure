@page "/students/delete"
@using BlazorAutoRenderingApp.Models
@using BlazorAutoRenderingApp.DAL
@inject NavigationManager NavigationManager
@inject BlazorAutoRenderingApp.DAL.Student_DAL StudentDAL
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
	<h2>Student</h2>
	<hr />
	@if (student is null)
	{
		<p><em>Loading...</em></p>
	}
	else
	{
		<dl class="row">
			<dt class="col-sm-2">Name</dt>
			<dd class="col-sm-10">@student.Name</dd>
		</dl>
		<dl class="row">
			<dt class="col-sm-2">Age</dt>
			<dd class="col-sm-10">@student.Age</dd>
		</dl>
		<dl class="row">
			<dt class="col-sm-2">Birthday</dt>
			<dd class="col-sm-10">@student.Birthday</dd>
		</dl>
@* 		<form method="post" @onsubmit="DeleteStudent">
			<AntiforgeryToken />
			<button type="submit" class="btn btn-danger" disabled="@(student is null)">Delete</button> |
			<a href="/students">Back to List</a>
		</form> *@
		<button type="button" class="btn btn-danger" @onclick="DeleteStudent">Delete</button>
		<a href="/students"> Back to List</a>
	}
</div>

@code {
	private Student? student;

	[SupplyParameterFromQuery]
	public int Id { get; set; }

	protected override void OnInitialized()
	{
		student = StudentDAL.GetStudentById(Id);

		if (student is null)
		{
			NavigationManager.NavigateTo("notfound");
		}
	}

	private void DeleteStudent()
	{
		if (student != null)
		{
			bool isDeleted = StudentDAL.Delete(student.Id);
			if (isDeleted)
			{
				NavigationManager.NavigateTo("/students");
			}
			else
			{
				// Handle delete failure
				Console.WriteLine("Failed to delete the student.");
			}
		}
	}
}
