@page "/students/edit"
@using BlazorAutoRenderingApp.Models
@inject NavigationManager NavigationManager
@inject BlazorAutoRenderingApp.DAL.Student_DAL StudentDAL
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Edit Student</PageTitle>

<h1>Edit</h1>

<h2>Student</h2>
<hr />
@if (Student is null)
{
	<p><em>Loading...</em></p>
}
else
{
	<div class="row">
		<div class="col-md-4">
			<form method="post" @onsubmit="UpdateStudent" Enhance>
				<AntiforgeryToken />
				<input type="hidden" name="Student.Id" value="@Student.Id" Enhance/>
				<div class="mb-3">
					<label for="name" class="form-label">Name:</label>
					<input id="name" name="name" @bind="Student.Name"  class="form-control" />
					<span class="text-danger">@ValidationMessage(nameof(Student.Name))</span>
				</div>
				<div class="mb-3">
					<label for="age" class="form-label">Age:</label>
					<input id="age" name="age" type="number" @bind="Student.Age" class="form-control" />
					<span class="text-danger">@ValidationMessage(nameof(Student.Age))</span>
				</div>
				<div class="mb-3">
					<label for="birthday" class="form-label">Birthday:</label>
					<input id="birthday" name="birthday" type="date" @bind="Student.Birthday" class="form-control" />
					<span class="text-danger">@ValidationMessage(nameof(Student.Birthday))</span>
				</div>
				<button type="submit" class="btn btn-primary">Save</button>
			</form>
		</div>
	</div>
}

<div>
	<a href="/students">Back to List</a>
</div>

@code {
	[SupplyParameterFromQuery]
	public int Id { get; set; }

	[SupplyParameterFromForm]
	public Student? Student { get; set; }

	protected override void OnInitialized()
	{
		Student = StudentDAL.GetStudentById(Id);

		if (Student is null)
		{
			NavigationManager.NavigateTo("notfound");
		}
	}

	private void UpdateStudent()
	{
		if (StudentDAL.Update(Student!))
		{
			NavigationManager.NavigateTo("/students");
		}
		else
		{
			NavigationManager.NavigateTo("/students");
		}
	}

	private string ValidationMessage(string propertyName)
	{
		// Implement validation message retrieval logic here
		return string.Empty;
	}
}
